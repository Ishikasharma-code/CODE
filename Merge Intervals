import java.util.*;

public class MergeIntervals {
    public static int[][] merge(int[][] intervals) {
        // Sorting intervals based on the start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));
        List<int[]> merged = new ArrayList<>();
        
        for (int[] interval : intervals) {
            // If merged list is empty or current interval doesn't overlap
            if (merged.isEmpty() || merged.get(merged.size() - 1)[1] < interval[0]) {
                merged.add(interval);
            } else {
                // If intervals overlap, merge them
                merged.get(merged.size() - 1)[1] = Math.max(merged.get(merged.size() - 1)[1], interval[1]);
            }
        }
        
        // Converting List<int[]> to int[][]
        return merged.toArray(new int[merged.size()][]);
    }
